on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
permissions:
  contents: write
  discussions: write
name: Release ImmichFrame

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux-x64', 'linux-armv7l', 'linux-arm64', 'windows-x64', 'windows-arm64', 'mac-x64', 'mac-arm64']
        include:
          - kind: linux-x64
            os: ubuntu-latest
            target: linux-x64  
          - kind: linux-armv7l
            os: ubuntu-latest
            target: linux-armv7l        
          - kind: linux-arm64
            os: ubuntu-latest
            target: linux-arm64
          - kind: windows-x64
            os: windows-latest
            target: win-x64    
          - kind: windows-arm64
            os: windows-latest
            target: win-arm64               
          - kind: mac-x64
            os: macos-latest
            target: mac-x64
          - kind: mac-arm64
            os: macos-latest
            target: mac-arm64
    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
      - name: Build Desktop
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          release_name="ImmichFrame-$tag-${{ matrix.target }}"
          echo "build started"
          # Build everything
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            npm run build --win --x64 --verbose
          elif [ "${{ matrix.target }}" == "win-arm64" ]; then
            npm run build --win --arm64 --verbose  
          elif [ "${{ matrix.target }}" == "linux-armv7l" ]; then
            npm run build --linux --armv7l --verbose        
          elif [ "${{ matrix.target }}" == "linux-arm64" ]; then
            npm run build --linux --arm64 --verbose
          elif [ "${{ matrix.target }}" == "linux-x64" ]; then
            npm run build --linux --x64 --verbose
          elif [ "${{ matrix.target }}" == "macos-x64" ]; then
            npm run build --mac --x64 --verbose
          elif [ "${{ matrix.target }}" == "macos-arm64" ]; then
            npm run build --mac --arm64 --verbose
          fi
          echo "build ended"
          ls

          # Pack files
          #7z a -tzip "${release_name}.zip" "./${release_name}/*"
          echo "zipping ended"
          
          #rm -r "$release_name"
      - name: Publish
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.dmg
            dist/*.exe
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.app
            dist/*.pkg
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
