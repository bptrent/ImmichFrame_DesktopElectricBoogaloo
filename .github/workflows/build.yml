name: Build Releases

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write  # Ensures GITHUB_TOKEN has write access to push tags

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        arch: [x64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: true  # Ensures the token is available for pushing tags

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build application (Linux and macOS)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          if [[ "${{ matrix.arch }}" == "x64" ]]; then
            npm run build -- --linux --x64
          elif [[ "${{ matrix.arch }}" == "arm64" ]]; then
            npm run build -- --linux --arm64
          fi
        shell: bash

      - name: Build application (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          if ($env:matrix_arch -eq 'x64') {
            npm run build -- --win --x64
          } elseif ($env:matrix_arch -eq 'arm64') {
            npm run build -- --win --arm64
          }
        shell: pwsh

      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Git tag
        if: github.ref == 'refs/heads/main'
        shell: bash
        env:
          TAG_NAME: "v${{ github.run_id }}"
        run: |
          git tag -a "$TAG_NAME" -m "Automated release $TAG_NAME"
          git push origin "$TAG_NAME"

      - name: Verify Tag Creation
        run: git tag  # Outputs all tags to verify the new tag is created

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: |
            dist/*.dmg
            dist/*.exe
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
